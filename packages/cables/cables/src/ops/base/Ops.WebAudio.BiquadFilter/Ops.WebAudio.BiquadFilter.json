{
    "author": "56cdab144f85abfb36c6c089",
    "authorName": "tim",
    "id": "3e28f86a-4f74-49a2-a1a6-f8943c00352d",
    "layout": {
        "portsIn": [
            {
                "type": "2",
                "name": "Audio In"
            },
            {
                "type": "0",
                "name": "type index",
                "subType": "integer"
            },
            {
                "type": "0",
                "name": "frequency",
                "subType": "number"
            },
            {
                "type": "0",
                "name": "detune",
                "subType": "number"
            },
            {
                "type": "0",
                "name": "q",
                "subType": "number"
            },
            {
                "type": "0",
                "name": "gain",
                "subType": "number"
            }
        ],
        "portsOut": [
            {
                "type": "2",
                "name": "Audio Out"
            }
        ]
    },
    "summary": "Different kinds of audio effect / filters",
    "docs": {
        "ports": [
            {
                "name": "Audio In",
                "text": "The audio signal you want to apply the filter to"
            },
            {
                "name": "type",
                "text": "Which type of filter, either `allpass`, `lowpass`, `highpass`, `bandpass`, `lowshelf`, `highshelf`, `peaking`or `notch`.  **Lowpass**: A lowpass filter allows frequencies below the cutoff frequency to pass through and attenuates frequencies above the cutoff. LOWPASS implements a standard second-order resonant lowpass filter with 12dB/octave rolloff. **Highpass**: A highpass filter is the opposite of a lowpass filter. Frequencies above the cutoff frequency are passed through, but frequencies below the cutoff are attenuated. HIGHPASS implements a standard second-order resonant highpass filter with 12dB/octave rolloff. **Bandpass**: A bandpass filter allows a range of frequencies to pass through and attenuates the frequencies below and above this frequency range. BANDPASS implements a second-order bandpass filter. **Lowshelf**: The lowshelf filter allows all frequencies through, but adds a boost (or attenuation) to the lower frequencies. LOWSHELF implements a second-order lowshelf filter. **Highshelf**: The highshelf filter is the opposite of the lowshelf filter and allows all frequencies through, but adds a boost to the higher frequencies. HIGHSHELF implements a second-order highshelf filter **Peaking**: The peaking filter allows all frequencies through, but adds a boost (or attenuation) to a range of frequencies. **Notch**: The notch filter (also known as a band-stop or band-rejection filter) is the opposite of a bandpass filter. It allows all frequencies through, except for a set of frequencies. **Allpass**: An allpass filter allows all frequencies through, but changes the phase relationship between the various frequencies. ALLPASS implements a second-order allpass filter (from [smartjava.org](http://www.smartjava.org/content/exploring-html5-web-audio-api-filters))"
            },
            {
                "name": "frequency",
                "text": "A frequency in the current filtering algorithm measured in hertz (Hz)."
            },
            {
                "name": "detune",
                "text": "Representing detuning of the frequency in [cents](https://en.wikipedia.org/wiki/Cent_(music))."
            },
            {
                "name": "q",
                "text": "Q-factor / quality-factor, see [Wikipedia](http://en.wikipedia.org/wiki/Q_factor)"
            },
            {
                "name": "gain",
                "text": "How loud the audio output should be, `1` = normal (unchanged), `0` = not audible"
            },
            {
                "name": "Audio Out",
                "text": "Audio output which contains the the input signal with the filter applied, can be connected to the Ops.WebAudio.Output op e.g."
            }
        ]
    },
    "created": 1558533780684,
    "exampleProjectId": "nhyACp"
}
